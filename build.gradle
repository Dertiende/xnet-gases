plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.97'
}

version = project.mod_version
group = "terrails.xnetgases"

base {
    archivesName = "xnetgases-${project.minecraft_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {
    configureEach {
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run')
    }

    server {
        workingDirectory project.file('run/server')
        programArgument '--nogui'
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

//    implementation "maven.modrinth:xnet:${project.xnet_version}"
//    implementation "maven.modrinth:rftools-base:${project.rftoolsbase_version}"
//    implementation "maven.modrinth:mcjtylib:${project.mcjtylib_version}"
    implementation "maven.modrinth:mekanism:${project.mekanism_version}"
}

java {
    withSourcesJar()
}

artifacts {
    archives sourcesJar
}

jar.manifest.attributes([
        "Specification-Title": "xnetgases",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
])

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}